{"version":3,"sources":["components/Tour.js","components/Tours.js","App.js","reportWebVitals.js","index.js"],"names":["Tour","id","image","info","name","price","removeTour","useState","readMore","setReadMore","read","substring","readCond","className","src","alt","onClick","Tours","tours","singleTour","map","tour","App","loading","setLoading","setTours","useEffect","fetchTours","a","fetch","response","json","resData","console","log","showTours","length","newTours","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA8BeA,EA5BF,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC5C,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAOF,EAAWL,EAAH,UAAaA,EAAKQ,UAAU,EAAG,KAA/B,OACfC,EAAWJ,EAAW,WAAa,YAEzC,OACE,0BAASK,UAAU,YAAnB,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKC,IAAKZ,EAAOa,IAAKX,EAAMS,UAAU,eAExC,sBAAKA,UAAU,YAAf,UACC,qBAAIA,UAAU,gBAAd,UACE,+BAAOT,IACP,sBAAMS,UAAU,QAAhB,SAAyBR,OAE3B,oBAAGQ,UAAU,kBAAb,UACGH,EACD,wBAAQG,UAAU,YAAYG,QAAS,kBAAMP,GAAaD,IAA1D,SAAsEI,OAExE,qBAAKC,UAAU,WAAf,SACC,wBAAQA,UAAU,uBAAuBG,QAAS,kBAAMV,EAAWL,IAAnE,qCCPOgB,EAbD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOZ,EAAiB,EAAjBA,WAEhBa,EAAcD,EAAME,KAAI,SAAAC,GAAI,OAChC,cAAC,EAAD,2BAAwBA,GAAxB,IAA8Bf,WAAYA,IAA/Be,EAAKpB,OAGlB,OACE,kCACGkB,KC4CQG,MAjDf,WACE,MAA8Bf,oBAAS,GAAvC,mBAAOgB,EAAP,KAAgBC,EAAhB,KACA,EAA0BjB,mBAAS,IAAnC,mBAAOW,EAAP,KAAcO,EAAd,KAEAC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAU,uCAAG,8BAAAC,EAAA,+EAEQC,MAZjB,8CAUS,cAETC,EAFS,gBAGOA,EAASC,OAHhB,OAGTC,EAHS,OAIfR,GAAW,GACXC,EAASO,GALM,kDAOfC,QAAQC,IAAR,MACAV,GAAW,GARI,0DAAH,qDAkBVW,EAAYZ,EAEd,4CACGL,EAAMkB,OAOT,gCACE,4CACA,cAAC,EAAD,CAAOlB,MAAOA,EAAOZ,WAlBR,SAACL,GAClB,IAAMoC,EAAWnB,EAAMoB,QAAO,SAAAjB,GAAI,OAAIA,EAAKpB,KAAOA,KAClDwB,EAASY,SASP,qBAAKxB,UAAU,cAAf,SACE,wBAAQA,UAAU,kBAAkBG,QAAS,kBAAMW,KAAnD,uBAUN,OACE,sBAAMd,UAAU,kBAAhB,SACGsB,KCtCQI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.dfc05f00.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Tour = ({ id, image, info, name, price, removeTour }) => {\r\n  const [readMore, setReadMore] = useState(false);\r\n  \r\n  const read = readMore ? info : `${info.substring(0, 200)}...`;\r\n  const readCond = readMore ? \"See less\" : \"Read more\";\r\n\r\n  return (\r\n    <section className=\"card my-4\">\r\n      <div className=\"card-img-top\">\r\n        <img src={image} alt={name} className=\"tour-img\" />\r\n      </div>\r\n      <div className=\"card-body\">\r\n       <h3 className=\"h5 card-title\">\r\n         <span>{name}</span>\r\n         <span className=\"price\">{price}</span>\r\n       </h3>\r\n       <p className=\"parag card-text\">\r\n         {read}\r\n         <button className=\"more-info\" onClick={() => setReadMore(!readMore)}>{readCond}</button>\r\n       </p>\r\n       <div className=\"tour-btn\">\r\n        <button className=\"btn remove-tour mt-3\" onClick={() => removeTour(id)}>Not Interested</button>\r\n       </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Tour;","import React from 'react';\r\nimport Tour from './Tour';\r\n\r\nconst Tours = ({ tours, removeTour }) => {\r\n\r\n  const singleTour  = tours.map(tour =>\r\n    <Tour key={tour.id} {...tour} removeTour={removeTour} />\r\n  );\r\n\r\n  return (\r\n    <article>\r\n      {singleTour}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Tours;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Tours from \"./components/Tours\";\n\nconst url = \"https://course-api.com/react-tours-project\";\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [tours, setTours] = useState([]);\n\n  useEffect(() => {\n    fetchTours();\n  }, []);\n\n  const fetchTours = async () => {\n    try {\n      const response = await fetch(url);\n      const resData = await response.json();\n      setLoading(false);\n      setTours(resData);\n    } catch(err) {\n      console.log(err);\n      setLoading(false);\n    }\n  };\n\n  const removeTour = (id) => {\n    const newTours = tours.filter(tour => tour.id !== id);\n    setTours(newTours); \n  }\n\n  // Conditional rendering\n  const showTours = loading ? (\n    // Showing loading before initial rendering\n      <h1>Loading...</h1>\n    ) : !tours.length ? (\n      // Show refresh button if no post\n      <div className=\"text-center\">\n        <button className=\"btn btn-primary\" onClick={() => fetchTours()}>Refresh</button>\n      </div>\n    ) : (\n      //Render tours post\n      <div>\n        <h1>Tours Post</h1>\n        <Tours tours={tours} removeTour={removeTour} />\n      </div>\n    );\n\n  return (\n    <main className=\"tours-container\">\n      {showTours}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}